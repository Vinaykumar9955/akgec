#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>

using namespace std;


bool isPrime(int n) {
    if (n < 2) return false;
    for (int i = 2; i <= sqrt(n); ++i) {
        if (n % i == 0) return false;
    }
    return true;
}


vector<int> rearrangeArray(vector<int>& arr) {
    vector<int> primes, nonPrimes;
    
    
    for (int num : arr) {
        if (isPrime(num)) {
            primes.push_back(num);
        } else {
            nonPrimes.push_back(num);
        }
    }
    
    if (primes.empty()) {

        sort(nonPrimes.rbegin(), nonPrimes.rend());
        return nonPrimes;
    }
    
    
    int largestPrime = *max_element(primes.begin(), primes.end());
    int smallestPrime = *min_element(primes.begin(), primes.end());
    

    sort(nonPrimes.rbegin(), nonPrimes.rend());
    
    
    vector<int> result;
    result.push_back(largestPrime);
    result.insert(result.end(), nonPrimes.begin(), nonPrimes.end());
    result.push_back(smallestPrime);
    
    return result;
}

int main() {

    vector<int> arr1 = {5, 1, 8, 11, 2};
    vector<int> arr2 = {1, 6, 4, 13, 9, 3};
    
    vector<int> result1 = rearrangeArray(arr1);
    vector<int> result2 = rearrangeArray(arr2);
    
    cout << "Output for arr1: ";
    for (int num : result1) {
        cout << num << " ";
    }
    cout << endl;
    
    cout << "Output for arr2: ";
    for (int num : result2) {
        cout << num << " ";
    }
    cout << endl;
    
    return 0;
}
